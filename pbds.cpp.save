#include<bits/stdc++.h>
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;

typedef tree< long long, null_type, less_equal<long long>, rb_tree_tag, tree_order_statistics_node_update > ordered_set;
//change ll to any data type
//less_equal for multiset increasing order
//less for set increasing order
//greater_equal for multiset decreasing order
//greater for set decreasing order

//cout<<*X.find_by_order(1)<<endl; // iterator to the k-th largest element
//cout<<X.order_of_key(-5)<<endl;  // number of items in a set that are strictly smaller than our item

int main(){
    int n;
    cin >> n;
    ordered_set ps;
    for(int i=0; i<n; i++)ps.insert(i);
    for(int i=0; i<n; i++){
        int a;
        cin >> a;
        cout << *ps.orde
    }
    
}
